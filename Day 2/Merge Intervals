static bool cmp(vector<int> &a,vector<int> &b){
        if(a[0]!=b[0]) return a[0]<b[0];
        else           return a[1]<b[1];
    }
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        sort(intervals.begin(),intervals.end(),cmp);
        int n = intervals.size();
        vector<vector<int>> answer;
        vector<int> ans;
        ans.push_back(intervals[0][0]);
        int ind = 0;
        int maxElement = intervals[0][1];
        for(int i=0;i<n-1;i++){
            if(maxElement >= intervals[i+1][0]) {
                maxElement = max(maxElement,intervals[i+1][1]);
            }
            else {
                ans.push_back(maxElement);
                answer.push_back(ans);
                ans.clear();
                ind = i;
                if(i+1 < n){
                    ans.push_back(intervals[i+1][0]);
                    maxElement = intervals[i+1][1];
                }
            }
        }
        if(ans.size()==1) ans.push_back(maxElement);
        answer.push_back(ans);
        return answer;
    }