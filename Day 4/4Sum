vector<vector<int>> fourSum(vector<int>& nums, int x) {
        auto n = nums.size();
        sort(nums.begin(), nums.end());
        vector<vector<int>> ans;
        for(int i=0; i<n; i++){
            if(i>0 and nums[i]==nums[i-1]) continue;
            for(int j=i+1; j<n; j++){
                if(j>i+1 and nums[j]==nums[j-1]) continue;
                auto s1 = x-nums[i]-nums[j]*1L;
                auto l = j+1;
                auto h = n-1;
                while(l<h){
                    auto s2=nums[l]+nums[h];
                    if(s2<s1) l++;
                    else if(s2>s1) h--;
                    else{
                        ans.push_back({nums[i],nums[j],nums[l],nums[h]});
                        auto l2 = nums[l];
                        while(l<h and nums[l]==l2) l++;
                        auto h2 = nums[h];
                        while(h > l and nums[h] == h2) h--;
                    }
                }
            }
        }
        return ans;
    }