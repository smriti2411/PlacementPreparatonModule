int palindromicPartition(string str)
   {
       // code here
       int n=str.length();
    vector<vector<bool>>dp(n,vector<bool>(n));
    for(int g=0;g<n;g++){
        for(int i=0,j=g;j<n;j++,i++){
            if(g==0){
                dp[i][j]=true;
            }
            else if(g==1){
                if(str[i]==str[j]){
                    dp[i][j]=true;
                }
                else{
                    dp[i][j]=false;
                }
            }
            else{
                if(str[i]==str[j] and dp[i+1][j-1]==true){
                    dp[i][j]=true;
                }
                else{
                    dp[i][j]=false;
                }
            }
        }
    }
    vector<int>strg(n);
    strg[0]=0;
    for(int j=1;j<n;j++){
        if(dp[0][j]){
            strg[j]=0;
        }
        else{
            int mini=INT_MAX;
            for(int i=j;i>=1;i--){
                if(dp[i][j]){
                    if(strg[i-1]<mini){
                        mini=strg[i-1];
                    }
                }
            }
            strg[j]=mini+1;
        }
    }
    return strg[n-1];
    
   }